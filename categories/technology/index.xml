<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Technology on Robert Terakedis</title><link>https://blog.euc-rt.me/categories/technology/</link><description>Recent content in Technology on Robert Terakedis</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2020 Robert Terakedis; all rights reserved.</copyright><lastBuildDate>Wed, 04 Jan 2023 22:28:08 -0500</lastBuildDate><atom:link href="https://blog.euc-rt.me/categories/technology/index.xml" rel="self" type="application/rss+xml"/><item><title>HomePod Mini Ignoring Family Explicit Content Settings and Simply Not Working</title><link>https://blog.euc-rt.me/post/homepod-mini-ignoring-family-explicit-content-settings/</link><pubDate>Wed, 04 Jan 2023 22:28:08 -0500</pubDate><guid>https://blog.euc-rt.me/post/homepod-mini-ignoring-family-explicit-content-settings/</guid><description>
Sudden panic set in as I walked by my child's room and heard the lyric from Monsters by All Time Low -- &amp;quot;I don't mind while you f**k up my life&amp;quot;
Yes, I just had the realization that the critical parental controls on the Homepod Mini's in my children's rooms were no longer working as intended. This set off a multi-hour troubleshooting session, with some involvement from AppleCare, that got things working until it didn't (again).</description></item><item><title>Apple's Missing Hardware - A KVM Switch</title><link>https://blog.euc-rt.me/post/apples-missing-hardware-kvm-switch/</link><pubDate>Fri, 25 Nov 2022 15:40:35 -0500</pubDate><guid>https://blog.euc-rt.me/post/apples-missing-hardware-kvm-switch/</guid><description>
Let me start by saying that I'm assuming many of you out there are in a situation quite similar to my own. This situation; having a personal Mac and a work Mac (and maybe an iPad Pro thrown into that mix also). But if you're also like me, you have limited space on your desk and don't want to be surrounded by monitors! This leads me to my most potent complaint about Apple hardware; the lack of a KVM switch.</description></item><item><title>Ensuring Domain Name Survival</title><link>https://blog.euc-rt.me/post/ensuring-domain-name-survival/</link><pubDate>Fri, 24 Jun 2022 21:54:25 -0400</pubDate><guid>https://blog.euc-rt.me/post/ensuring-domain-name-survival/</guid><description>
I was listening to the Security Now Podcast the other day, and a GREAT topic came up that I wanted to write about. That topic, as covered by Leo and Steve, involves ownership (specifically registrants) of Domain Name System (DNS) records. I know from past experience, domain &amp;quot;ownership&amp;quot; never seems to be front-of-mind for many folks deciding to start a website. Whether you're simply looking to blog, or starting a new business, the focus tends to be on the outcome (&amp;quot;I have a new website&amp;quot;) than the path to get there.</description></item><item><title>New Job in the Privacy Industry at OneTrust</title><link>https://blog.euc-rt.me/post/new-job-industry-privacy-onetrust-copy/</link><pubDate>Fri, 24 Jun 2022 21:54:25 -0400</pubDate><guid>https://blog.euc-rt.me/post/new-job-industry-privacy-onetrust-copy/</guid><description>
Lots of changes afoot in my professional life. This past February, I joined the ranks of many folks in the Great Resignation and made a career shift. With my new role, I'm working for OneTrust -- a company that creates software to help other companies manage their privacy and regulatory compliance. It's been a total shock to the system --&amp;gt; completely new vocabulary, new verticals, everything. To say I'm feeling impostor syndrome would be an understatement, but I welcome the opportunity to get out of my comfort zone and learn something new.</description></item><item><title>Change From Beautifulhugo to Clarity Theme</title><link>https://blog.euc-rt.me/post/change-from-beautifulhugo-to-clarity-theme/</link><pubDate>Fri, 11 Feb 2022 12:24:02 -0500</pubDate><guid>https://blog.euc-rt.me/post/change-from-beautifulhugo-to-clarity-theme/</guid><description>
Background Since I first started this blog, I was using a theme called BeautifulHugo. The theme was great and for the most part visually appealing. However, there were some changes I was hoping to see made to the theme that never really manifested. I had even contributed back some of my own changes, but it appeared the theme had been abandoned by it's creator. I set about looking for a new theme and stumbled onto hugo-clarity.</description></item><item><title>Mapping Concepts from Munki to WS1 UEM</title><link>https://blog.euc-rt.me/post/mapping-concepts-from-munki-to-workspace-one-uem/</link><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/mapping-concepts-from-munki-to-workspace-one-uem/</guid><description>
Background Since Workspace ONE UEM version 9.3, VMware has included the open-source munki binaries in the Workspace ONE Intelligent Hub for macOS. The intent of this integration was to give macOS admins the ability to distribute 3rd-party non-store macOS apps, without the need to host any backing instrastructure for munki. Because this integration was meant to give admins some of the commonly used functionality, it was not integrated in such a way to include support for ALL munki's functionality.</description></item><item><title>Best Practices for Apple Admins in Workspace ONE UEM</title><link>https://blog.euc-rt.me/post/best-practices-for-apple-admins-in-workspace-one-uem/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/best-practices-for-apple-admins-in-workspace-one-uem/</guid><description>
Background I was recently reading a post about What to do when you have to lay off your Jamf administrator, and it got me thinking. The Workspace ONE UEM documentation generally specifies what you need from a software and hardware perspective in pre-requisites. That said, over the years I've come to know a few unwritten (or written but obscure) best practices for setting up Workspace ONE UEM to manage Apple devices.</description></item><item><title>Great *Free* Resources to Learn GitHub</title><link>https://blog.euc-rt.me/post/great-free-resources-to-learn-github/</link><pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/great-free-resources-to-learn-github/</guid><description>
Background Source control used to be a scary, odd thing for me back in college and early in my career. Branching, merging, commits... all the buzzwords I remember from my early days dealing with Microsoft Team Foundation Server (TFS) and Subversion. Admittedly, I never felt like I spent the time required to understand how it all worked. Fast forward to mid-2017, when a group of us within VMware needed to share some of our tips and tricks with the broader VMware community.</description></item><item><title>Converting Jamf Custom Schema JSON for Workspace ONE UEM</title><link>https://blog.euc-rt.me/post/converting-jamf-custom-schema-json-workspace-one-uem/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/converting-jamf-custom-schema-json-workspace-one-uem/</guid><description>
Background Periodically, I see app vendors providing custom JSON schema files to help build app-specific configuration profiles for MDM (specifically Jamf). Workspace ONE UEM supports app-specific configuration, but currently via Custom Settings in an XML format. While many vendors also suppply a custom mobileconfig file or Custom Settings dictionary that can be used with Workspace ONE UEM, I hope in this post to show how any Workspace ONE admin can manually convert a Custom Schema JSON file to Custom Settings XML.</description></item><item><title>Troubleshooting macOS Management with Workspace ONE</title><link>https://blog.euc-rt.me/post/troubleshooting-macos-management-with-workspace-one/</link><pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/troubleshooting-macos-management-with-workspace-one/</guid><description>
Background Short post today - just to cover some thoughts on my most recent asset published to TechZone. I finally sat down and dug out all my notes on troubleshooting macOS and put them all together into a single, comprehensive macOS Troubleshooting Guide. This thing was the result of almost 46 hours of fingers on keys: typing, formatting, and testing. I truly hope you all get some value out of it, and do feel free to send me feedback if you'd like it extended and/or notice something missing.</description></item><item><title>Updated GitHub Actions to Publish Hugo Site From Private to Public Repo</title><link>https://blog.euc-rt.me/post/updated-github-actions-publish-private-hugo-repo-to-public-pages-site/</link><pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/updated-github-actions-publish-private-hugo-repo-to-public-pages-site/</guid><description>
Background When I restarted my blogging journey last year, I went with Hugo to generate a static website hosted as a GitHub Pages site. As mentioned, Blogger and WordPress always suffered recurring problems, and maintenance with WordPress still turned into a time suck due to its complexity. By comparison, GitHub has been a nearly painless hosting provider, and the way I've configured it has allowed me to keep drafts hidden by staging in a private repository.</description></item><item><title>Deploying NoMAD over VMware Per-App Tunnel</title><link>https://blog.euc-rt.me/post/deploying-nomad-over-vmware-per-app-tunnel/</link><pubDate>Fri, 16 Oct 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/deploying-nomad-over-vmware-per-app-tunnel/</guid><description>
Background Some folks recently reached out to me asking for help figuring out how to route NoMAD traffic over VMware Tunnel. Basically, the ask was to use Per-App Tunneling to give NoMAD the ability to obtain Kerberos Tickets and Sync AD passwords without being directly on the Enterprise network. If you're familiar with my previous article about the macOS Catalina Kerberos SSO Plugin, you'll know that Apple's built-in functionality in Catalina doesn't work well with Per-App Tunneling.</description></item><item><title>Modify ZShell Defaults in macOS</title><link>https://blog.euc-rt.me/post/modify-zshell-defaults/</link><pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/modify-zshell-defaults/</guid><description>
Background I'm finding myself using the Terminal quite a bit more in my job. I spent a few minutes over the past few days looking at different ways to make the default terminal layout in macOS better. While there are many plugins out there for doing this (Oh-My-Zsh), I wanted to do something a little more straightforward.
How You Change zsh Default Layouts Armin Briegel has a great article about customizing the zsh prompt in his moving to zsh series.</description></item><item><title>macOS Big Sur and Kerberos SSO via Per-App Tunnel</title><link>https://blog.euc-rt.me/post/macos-bigsur-kerberos-sso-over-vpn/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/macos-bigsur-kerberos-sso-over-vpn/</guid><description>
Background If you've read my blogs about macOS Catalina Kerberos SSO over Per-App Tunnel and the followup, you'll know that this has been a use-case I'm interested in solving. I put a great deal of effort into filing feedback with Apple and providing steps to replicate the issue. I was quite excited when I saw the per-app Tunnel improvements specifically mentioned in the WWDC videos, and hoped perhaps some changes were made to enable this functionality.</description></item><item><title>Using GitHub Actions to Publish Hugo Site From Private to Public Repo</title><link>https://blog.euc-rt.me/post/github-actions-publish-private-hugo-repo-to-public-pages-site/</link><pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/github-actions-publish-private-hugo-repo-to-public-pages-site/</guid><description>
Background I restarted my blogging journey earlier this year when I started looking into Jekyll Hugo to generate a static website. I had past experience with Blogger and Wordpress, but frankly had periodic problems with both platforms that ended up being a time suck. As it has been, Hugo has been a simplistic publishing method and GitHub a reliable (and FREE) hosting provider. Yet, my desire to keep my drafts private (.</description></item><item><title>Building a Basic Azure HomeLab for Testing Workspace ONE UEM</title><link>https://blog.euc-rt.me/post/2020-08-09-building-basic-azure-homelab-workspace-one-uem/</link><pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/2020-08-09-building-basic-azure-homelab-workspace-one-uem/</guid><description>
Background NOTE: This is still under construction but I wanted to share what I had so far...
Two things intersected for me this weekend: Issues with my current lab setup, and realization of some unused credits with my MSDN subscription. This led me down the path of building a basic Azure homelab for Workspace ONE UEM testing. My intent of this blog post is to document the process for myself to re-use, but I also invite your comments on how to improve the scenario.</description></item><item><title>macOS Catalina Kerberos SSO over VPN Followup</title><link>https://blog.euc-rt.me/post/macos-catalina-kerberos-sso-over-vpn-followup/</link><pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/macos-catalina-kerberos-sso-over-vpn-followup/</guid><description>
Background I've been going back and forth with Apple about some of the issues I previously found using the macOS Catalina Kerberos SSO over Per-App VPN. As it turns out, they acknowledged some of the issues I was seeing and are supposedly working on a fix. I've been watching the past few beta releases for macOS, and I've not yet seen anything in the release notes to indicate they've implemented any fixes.</description></item><item><title>New Key Added to SoftwareUpdate Command in macOS</title><link>https://blog.euc-rt.me/post/new-key-added-softwareupdate-command-macos/</link><pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/new-key-added-softwareupdate-command-macos/</guid><description>
Background When Big Sur released, I noticed an issue trying to discover what macOS versions were available in SoftwareUpdate. I worked around this by using the installinstallmacos.py script to download full installers from the store. This script/tool is solid, but I was really hoping to be able to just do the updates using softwareupdate. Awhile back I filed feedback with Apple to the following:
The --fetch-full-installer parameter for the softwareupdate command line tool is awesome, but there's currently no way to discover the list of available values for the --full-installer-version parameter.</description></item><item><title>Another GitHub Actions Update - Using Deploy Keys Instead Of Personal Access Tokens</title><link>https://blog.euc-rt.me/post/another-github-actions-update-change-hugo-publish-deploy-keys/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/post/another-github-actions-update-change-hugo-publish-deploy-keys/</guid><description>
Background When I restarted my blogging journey in 2020, I switched from Jekyll to Hugo hosted in GitHub pages. It's been a relatively painless journey, and kudos to GitHub as a rock-solid hosting provider. I've covered it before (Initial Setup and First Update), but I've been incredibly happy with private-to-public publishing workflow that allows me to keep drafts and work-in-progress hidden. That said, a recent comment gave me reason to make another update to the Workflow.</description></item><item><title>My Adapted Digital Bullet Journal via iPad Pro and GoodNotes 5</title><link>https://blog.euc-rt.me/2020-03-06-organizing-adapted-digital-bullet-journal-ipad-goodnotes/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/2020-03-06-organizing-adapted-digital-bullet-journal-ipad-goodnotes/</guid><description>
Background Last year, my wife introduced me to an entirely foreign-to-me concept of journaling known as Bullet Journaling. For those of you uninitiated, think of bullet journaling as an extensible planner with a heavy focus on the index to help bring order to chaos. A bullet journal is flexible, allowing you to organize tasks, events, collections (groups of tasks, ideas, and more). Bullet Journaling was born of a need to bring all the ideas/tasks/events plaguing us in the digital age and put them to paper in a single place.</description></item><item><title>Deploying Microsoft Defender ATP for macOS using Workspace ONE UEM</title><link>https://blog.euc-rt.me/2020-02-18-Deploying-Microsoft-ATP-Defender-for-Mac-using-Workspace-One/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/2020-02-18-Deploying-Microsoft-ATP-Defender-for-Mac-using-Workspace-One/</guid><description>
Background I had a few folks recently approach me on the MacAdmins slack asking for help with deploying Microsoft Defender ATP for Mac. We got it working, but it came down to 2 issues: conflicting documentation and Jamf/inTune specific templates. Once I was able to parse through the Jamf/InTune documentation, we were able to put together some guidance. We recently published this guide to the EUC Samples GitHub Repository.
Conflicting Documentation The initial problem I found was some confusion generated by Microsoft's documentation.</description></item><item><title>Testing macOS Catalina Kerberos SSO Extension Over VPN</title><link>https://blog.euc-rt.me/2020-02-04-macOS-Catalina-Kerberos-SSO-Over-VPN/</link><pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/2020-02-04-macOS-Catalina-Kerberos-SSO-Over-VPN/</guid><description>
Background Working at VMware, I'm surrounded by great technology and super-smart folks! In our portfolio of technologies, the folks in our R&amp;amp;D have recently been putting quite a bit of effort into building out macOS capabilities for our Workspace ONE Tunnel client for macOS. Workspace ONE admins can leverage the same VMware technology they used to enable per-app VPN for iOS and Android, but now on macOS! There's a bit of nuance to configuring the VPN client if you're previously familiar with iOS (look for my Operational Tutorial soon to hit TechZone).</description></item><item><title>Welcome to Hugo (from Jekyll)</title><link>https://blog.euc-rt.me/2018-06-15-welcome-to-jekyll/</link><pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate><guid>https://blog.euc-rt.me/2018-06-15-welcome-to-jekyll/</guid><description>
Welcome to my wholly reworked website! This time, I've dropped the complexity of Wordpress and opted for something significantly simpler: Jekyll Hugo and GitHub.
Having now hosted the site in GitHub Pages, here was the process I started with Hugo:
Created the Github Pages repo (rterakedis.github.io) -- this is where github pages looks for the blog's generated site files. Created a 2nd Github repo: rterakedis.github.io.hugo -- this repo holds the source files for Hugo to parse and generate the site.</description></item></channel></rss>